#!/usr/bin/env -S bash --norc --noprofile
#shellcheck shell=bash disable=SC1008,SC2096
#
# ~/bin/sndvol lil script to play around with volume settings

# Unofficial Bash Strict Mode
set -eo pipefail
IFS=$'\t\n'

sndvol() {

    # Timeout settings for Xdialog, Xmessage
    local -r XMTO="1" # xmessage timeout is in seconds...
    local -r XDTO="$(( XMTO * 1000 ))" # Xdialog/dialog is in milliseconds.

    # Xdialog/dialog
    declare -rx XDIALOG_HIGH_DIALOG_COMPAT=1 XDIALOG_FORCE_AUTOSIZE=1 \
	    XDIALOG_INFOBOX_TIMEOUT="${XDTO}" XDIALOG_NO_GMSGS=1 \
	    DIALOG_OK=0 DIALOG_CANCEL=1 DIALOG_HELP=2 \
	    DIALOG_EXTRA=3 DIALOG_ITEM_HELP=4 DIALOG_ESC=255 \
	    SIG_NONE=0 SIG_HUP=1 SIG_INT=2 SIG_QUIT=3 SIG_KILL=9 SIG_TERM=15

    local -r script_name="${BASH_SOURCE[0]##*/}"

    # Mutexify to avoid process spam
    # local -ar pids=( $(pgrep -U "${USER}" -f "${script_name}") )
    # [[ "${#pids[*]}" -gt "1" ]] && return 1

    # Pick a default available UI ...
    #shellcheck disable=SC2155
    if [[ -x "$(type -P Xdialog)" && -n "${DISPLAY}" ]]; then # Check for X, Xdialog
	local -r DIALOG="$(type -P Xdialog)" G=( "0" "0" "${XDTO}" )
    elif [[ -x "$(type -P dialog)" && -z "${DISPLAY}" ]]; then
	local -r DIALOG="$(type -P dialog)" G=( "0" "0" )
    else
	local -r DIALOG=''
    fi

    display_feedback() {
	if [[ -n "${DIALOG}" ]]; then
            "${DIALOG}" --title "${script_name}:" --infobox "${*}" "${G[@]}"
	elif [[ -x "$(type -P xmessage)" ]]; then
            xmessage -nearmouse -timeout "${XMTO}" "${*}"
	elif [[ -x "$(type -P notify-send)" ]]; then
            notify-send "${script_name}:" "${*}"
	fi
	echo "${script_name}: ${*}" >&2
    }

    usage() {
	display_feedback "Usage: $script_name [+]|[-]|[0-100]|report|halp"
	return 1
    }

    #shellcheck disable=SC2015
    case "${1}" in
	+|-) VOL="$(amixer -c 0 -- sset Master "10dB${1}")";;
	*[0-9]) [[ "${1}" =~ ^[0-9]{1,3}$ ]] && (( $1 >= 0 && $1 <= 100 )) && VOL="$(amixer -c 0 -- sset Master "${1}%")";;
	report) VOL="$(amixer -c 0 -- sget Master)";;
	*) usage ;;
    esac

    VOL="${VOL/\]*}"
    VOL="${VOL/*\[}"

    display_feedback "Master: ${VOL}"
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && "${BASH_SOURCE[0]##*/}" "${@}"
